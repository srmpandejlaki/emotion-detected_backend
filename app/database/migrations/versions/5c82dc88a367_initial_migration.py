"""initial migration

Revision ID: 5c82dc88a367
Revises: 
Create Date: 2025-04-18 07:30:52.259212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c82dc88a367'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('label_emotion',
    sa.Column('id_label', sa.Integer(), nullable=False),
    sa.Column('nama_label', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id_label')
    )
    op.create_index(op.f('ix_label_emotion_id_label'), 'label_emotion', ['id_label'], unique=False)
    op.create_table('model',
    sa.Column('id_model', sa.Integer(), nullable=False),
    sa.Column('ratio_data', sa.String(length=10), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('matrix_id', sa.Integer(), nullable=True),
    sa.Column('metrics_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id_model')
    )
    op.create_index(op.f('ix_model_id_model'), 'model', ['id_model'], unique=False)
    op.create_table('class_metrics',
    sa.Column('metrics_id', sa.Integer(), nullable=False),
    sa.Column('label_id', sa.Integer(), nullable=False),
    sa.Column('precision', sa.Float(), nullable=True),
    sa.Column('recall', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['label_id'], ['label_emotion.id_label'], ),
    sa.PrimaryKeyConstraint('metrics_id', 'label_id'),
    sa.UniqueConstraint('metrics_id', 'label_id', name='uix_class_metrics')
    )
    op.create_table('confusion_matrix',
    sa.Column('matrix_id', sa.Integer(), nullable=False),
    sa.Column('label_id', sa.Integer(), nullable=False),
    sa.Column('predicted_label_id', sa.Integer(), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['label_id'], ['label_emotion.id_label'], ),
    sa.ForeignKeyConstraint(['predicted_label_id'], ['label_emotion.id_label'], ),
    sa.PrimaryKeyConstraint('matrix_id', 'label_id', 'predicted_label_id'),
    sa.UniqueConstraint('matrix_id', 'label_id', 'predicted_label_id', name='uix_confusion_matrix')
    )
    op.create_table('data_collection',
    sa.Column('id_data', sa.Integer(), nullable=False),
    sa.Column('text_data', sa.Text(), nullable=False),
    sa.Column('label_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['label_id'], ['label_emotion.id_label'], ),
    sa.PrimaryKeyConstraint('id_data')
    )
    op.create_index(op.f('ix_data_collection_id_data'), 'data_collection', ['id_data'], unique=False)
    op.create_table('validation_result',
    sa.Column('id_validation', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('matrix_id', sa.Integer(), nullable=True),
    sa.Column('metrics_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['model.id_model'], ),
    sa.PrimaryKeyConstraint('id_validation')
    )
    op.create_index(op.f('ix_validation_result_id_validation'), 'validation_result', ['id_validation'], unique=False)
    op.create_table('process_result',
    sa.Column('id_process', sa.Integer(), nullable=False),
    sa.Column('id_data', sa.Integer(), nullable=True),
    sa.Column('text_preprocessing', sa.Text(), nullable=False),
    sa.Column('is_training_data', sa.Boolean(), nullable=False),
    sa.Column('automatic_label', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['automatic_label'], ['label_emotion.id_label'], ),
    sa.ForeignKeyConstraint(['id_data'], ['data_collection.id_data'], ),
    sa.PrimaryKeyConstraint('id_process')
    )
    op.create_index(op.f('ix_process_result_id_process'), 'process_result', ['id_process'], unique=False)
    op.create_table('model_data',
    sa.Column('id_model', sa.Integer(), nullable=False),
    sa.Column('id_process', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_model'], ['model.id_model'], ),
    sa.ForeignKeyConstraint(['id_process'], ['process_result.id_process'], ),
    sa.PrimaryKeyConstraint('id_model', 'id_process')
    )
    op.create_table('validation_data',
    sa.Column('id_validation', sa.Integer(), nullable=False),
    sa.Column('id_process', sa.Integer(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_process'], ['process_result.id_process'], ),
    sa.ForeignKeyConstraint(['id_validation'], ['validation_result.id_validation'], ),
    sa.PrimaryKeyConstraint('id_validation', 'id_process')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('validation_data')
    op.drop_table('model_data')
    op.drop_index(op.f('ix_process_result_id_process'), table_name='process_result')
    op.drop_table('process_result')
    op.drop_index(op.f('ix_validation_result_id_validation'), table_name='validation_result')
    op.drop_table('validation_result')
    op.drop_index(op.f('ix_data_collection_id_data'), table_name='data_collection')
    op.drop_table('data_collection')
    op.drop_table('confusion_matrix')
    op.drop_table('class_metrics')
    op.drop_index(op.f('ix_model_id_model'), table_name='model')
    op.drop_table('model')
    op.drop_index(op.f('ix_label_emotion_id_label'), table_name='label_emotion')
    op.drop_table('label_emotion')
    # ### end Alembic commands ###
